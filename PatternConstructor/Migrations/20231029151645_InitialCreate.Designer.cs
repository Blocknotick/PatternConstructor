// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatternConstructor.Data;

#nullable disable

namespace PatternConstructor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231029151645_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatternConstructor.Models.Measure", b =>
                {
                    b.Property<int>("MeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasureId"));

                    b.Property<double>("BackArmholeDepth")
                        .HasColumnType("float");

                    b.Property<double>("BackWaistLength")
                        .HasColumnType("float");

                    b.Property<double>("BackWidth")
                        .HasColumnType("float");

                    b.Property<double>("BottomWidth")
                        .HasColumnType("float");

                    b.Property<double>("BustCenter")
                        .HasColumnType("float");

                    b.Property<double>("BustGirth")
                        .HasColumnType("float");

                    b.Property<double>("BustGirthUp")
                        .HasColumnType("float");

                    b.Property<double>("BustHeight")
                        .HasColumnType("float");

                    b.Property<double>("BustWidth")
                        .HasColumnType("float");

                    b.Property<double>("ElbowLength")
                        .HasColumnType("float");

                    b.Property<double>("FrontWaistLength")
                        .HasColumnType("float");

                    b.Property<double>("HipHeight")
                        .HasColumnType("float");

                    b.Property<double>("HipsGirth")
                        .HasColumnType("float");

                    b.Property<double>("LegLength")
                        .HasColumnType("float");

                    b.Property<double>("NeckGirth")
                        .HasColumnType("float");

                    b.Property<double>("SeatHeight")
                        .HasColumnType("float");

                    b.Property<double>("ShoulderToNeck")
                        .HasColumnType("float");

                    b.Property<double>("ShoulderToWrist")
                        .HasColumnType("float");

                    b.Property<double>("SleeveWidthBottom")
                        .HasColumnType("float");

                    b.Property<double>("UpperArm")
                        .HasColumnType("float");

                    b.Property<double>("WaistFloorBackLength")
                        .HasColumnType("float");

                    b.Property<double>("WaistFloorFrontLength")
                        .HasColumnType("float");

                    b.Property<double>("WaistFloorSideLength")
                        .HasColumnType("float");

                    b.Property<double>("WaistGirth")
                        .HasColumnType("float");

                    b.Property<double>("WristGirth")
                        .HasColumnType("float");

                    b.HasKey("MeasureId");

                    b.ToTable("Measure");
                });

            modelBuilder.Entity("PatternConstructor.Models.StandartMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("MeasureId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeasureId");

                    b.ToTable("standartMeasures");
                });

            modelBuilder.Entity("PatternConstructor.Models.StandartMeasure", b =>
                {
                    b.HasOne("PatternConstructor.Models.Measure", "Measure")
                        .WithMany()
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measure");
                });
#pragma warning restore 612, 618
        }
    }
}
